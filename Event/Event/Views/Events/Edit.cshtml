@model Event.Models.EventCreateViewModel

@{
    ViewBag.Title = "עריכה";
}

<h2>עריכה</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>אירוע</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.EventItem.ID)
        @Html.HiddenFor(model => model.EventItem.ApplicationUserID)

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.EventItem.Event, Model.Subjects, "בחר", new { @id = "subject", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventItem.Event)
            </div>
            @Html.LabelFor(m => m.EventItem.Event, new { @class = "col-md-2 control-label" })
        </div>
@if (!string.IsNullOrEmpty(Model.Other))
{
        <div id="otherOption" class="form-group">
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Other, new { @class = "form-control", @placeholder = "הכנס שם" })
                @Html.ValidationMessageFor(model => model.Other)
            </div>
            @*@Html.LabelFor(m => m.Other, new { @class = "col-md-2 control-label" })*@
        </div>
}
        <div class="form-group">
            <div id="sandbox-container" class="col-md-10">
                @Html.TextBoxFor(m => m.EventItem.Date, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventItem.Date)
            </div>
            @Html.LabelFor(m => m.EventItem.Date, new { @class = "col-md-2 control-label" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="שמירה" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("חזרה לרשימה", "Index")
</div>

@Styles.Render("~/Content/date3")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   @Scripts.Render("~/bundles/date3")
<script type="text/javascript">
    $(document).ready(function () {
        jQuery.validator.methods.date = function (value, element) {
            var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            if (isChrome) {
                var d = new Date();
                return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
            } else {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            }
        };
        $('#sandbox-container input').datetimepicker({
            format: 'DD/MM/YYYY HH:mm',
            sideBySide: true,
            showClose: true,
            locale: 'he',
            widgetPositioning: { horizontal: 'right' }
        });

        $('#subject').change(function () {
            var selected = $(this).val();
            if (selected == 'אחר') {
                //alert('The option with value ' + selected);
                $('#otherOption').show();
            }
            else {
                $('#otherOption').hide();
                $('#Other').val('');
            }
        });
    });
</script>

}